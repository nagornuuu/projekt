DROP TABLE FILMY CASCADE CONSTRAINTS;
DROP TABLE SALE CASCADE CONSTRAINTS;
DROP TABLE SEANSE CASCADE CONSTRAINTS;
DROP TABLE REZERWACJE CASCADE CONSTRAINTS;
DROP TABLE KLIENCI CASCADE CONSTRAINTS;
DROP TABLE BILETY CASCADE CONSTRAINTS;
DROP TABLE PROMOCJE CASCADE CONSTRAINTS;
DROP TABLE PRACOWNICY CASCADE CONSTRAINTS;

ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD';

CREATE TABLE FILMY (
    id_filmu INTEGER,
    tytul VARCHAR2(100),
    opis VARCHAR2(1000),
    gatunek VARCHAR2(100),
    czas_trwania VARCHAR2(100),
    CONSTRAINT FILMY_PK PRIMARY KEY (id_filmu)
);
CREATE TABLE PRACOWNICY (
    id_pracownicy INT,
    imie VARCHAR2(30),
    nazwisko VARCHAR2(30),
    stanowisko VARCHAR2(30),
    CONSTRAINT PRACOWNICY_PK PRIMARY KEY (id_pracownicy)
);

CREATE TABLE SALE (
    numer_sali INT,
    liczba_miejsc INT,
    CONSTRAINT SALE_PK PRIMARY KEY (numer_sali)
);

CREATE TABLE PROMOCJE (
    id_promocji INT,
    rabat decimal(7, 2),
    termin_waznosci date,
    CONSTRAINT PROMOCJE_PK PRIMARY KEY (id_promocji)
);

CREATE TABLE SEANSE (
    id_seansu INT,
    czas_rozpoczencia VARCHAR2(100),
    data DATE,
    id_filmu INT,
    numer_sali INT,
    CONSTRAINT SEANSE_PK PRIMARY KEY (id_seansu),
    FOREIGN KEY (id_filmu) REFERENCES FILMY (id_filmu),
    FOREIGN KEY (numer_sali) REFERENCES SALE (numer_sali)
);
CREATE TABLE BILETY (
    id_biletu INT,
    typ VARCHAR2(30),
    cena INT,
    data DATE,
    id_promocji INT,
    CONSTRAINT BILETY_PK PRIMARY KEY (id_biletu),
    FOREIGN KEY (id_promocji) REFERENCES PROMOCJE (id_promocji)
);

CREATE TABLE KLIENCI (
    id_klienciu INT,
    imie VARCHAR2(30),
    nazwisko VARCHAR2(30),
    email VARCHAR2(30),
    numer_telefonu INT,
    id_biletu INT,
    CONSTRAINT KLIENCI_PK PRIMARY KEY (id_klienciu),
    FOREIGN KEY (id_biletu) REFERENCES BILETY (id_biletu)
);


CREATE TABLE REZERWACJE (
    id_rezerwacji INT,
    data_rezerwacji DATE,
    status VARCHAR2(30),
    id_seansu INT,
    id_klienciu INT,
    id_pracownicy INT,
    CONSTRAINT REZERWACJE_PK PRIMARY KEY (id_rezerwacji),
    FOREIGN KEY (id_seansu) REFERENCES SEANSE (id_seansu),
    FOREIGN KEY (id_klienciu) REFERENCES KLIENCI (id_klienciu),
    FOREIGN KEY (id_pracownicy) REFERENCES PRACOWNICY (id_pracownicy)

);

INSERT INTO FILMY(id_filmu, tytul, opis, gatunek, czas_trwania) VALUES (1,'Harry Potter i Czara Ognia','Film opowiada o perypetiach Harry Pottera i jego przyjaciół','Fantasy', '02:30:00');
INSERT INTO FILMY(id_filmu, tytul, opis, gatunek, czas_trwania) VALUES (2,'Harry Potter i Komnata Tajemnic', 'Harry Potter i jego przyjaciele odkrywają tajemnicę komnaty w Hogwarcie', 'Fantasy', '02:15:00');
INSERT INTO FILMY(id_filmu, tytul, opis, gatunek, czas_trwania) VALUES (3,'Harry Potter i Książe Półkrwi', 'Harry i jego przyjaciele muszą zmierzyć się z nowym zagrożeniem', 'Fantasy', '02:45:00');
INSERT INTO FILMY(id_filmu, tytul, opis, gatunek, czas_trwania) VALUES (4, 'Harry Potter i Insygnia Śmierci, cz. 1', 'Harry i jego przyjaciele starają się powstrzymać Voldemorta', 'Fantasy', '02:30:00');
INSERT INTO FILMY(id_filmu, tytul, opis, gatunek, czas_trwania) VALUES (5, 'Harry Potter i Insygnia Śmierci, cz. 2', 'Ostateczne starcie pomiędzy dobrem a złem w świecie czarodziejów', 'Fantasy', '02:45:00');

INSERT INTO PRACOWNICY(id_pracownicy, imie, nazwisko, stanowisko) VALUES (1, 'Jan', 'Kowalski', 'Kasjer');
INSERT INTO PRACOWNICY(id_pracownicy, imie, nazwisko, stanowisko) VALUES (2, 'Anna', 'Obama', 'Kasjer');

INSERT INTO SALE(numer_sali, liczba_miejsc) VALUES (1,100);
INSERT INTO SALE(numer_sali, liczba_miejsc) VALUES (2,100);

INSERT INTO PROMOCJE(id_promocji, rabat, termin_waznosci) VALUES (1, 0.1, TO_DATE(2023-03-15));
INSERT INTO PROMOCJE(id_promocji, rabat, termin_waznosci) VALUES (2, 0.1, TO_DATE(2023-03-15));

INSERT INTO SEANSE(id_seansu, czas_rozpoczencia, data, id_filmu, numer_sali) VALUES (1, '20:00', TO_DATE(2023-02-30), 1, 1);
INSERT INTO SEANSE(id_seansu, czas_rozpoczencia, data, id_filmu, numer_sali) VALUES (2, '10:00', TO_DATE(2023-02-30), 2, 1);
INSERT INTO SEANSE(id_seansu, czas_rozpoczencia, data, id_filmu, numer_sali) VALUES (3, '10:00', TO_DATE(2023-02-30) , 3, 2);
INSERT INTO SEANSE(id_seansu, czas_rozpoczencia, data, id_filmu, numer_sali) VALUES (4, '10:00', TO_DATE(2023-02-30), 4, 1);
INSERT INTO SEANSE(id_seansu, czas_rozpoczencia, data, id_filmu, numer_sali) VALUES (5, '10:00', TO_DATE(2023-02-30), 5, 1);

INSERT INTO BILETY(id_biletu, typ, cena, data, id_promocji) VALUES (1, 'Normalny', 15, TO_DATE(2023-02-30), 1);
INSERT INTO BILETY(id_biletu, typ, cena, data, id_promocji) VALUES (2, 'Normalny', 20, TO_DATE(2023-02-30), null);
INSERT INTO BILETY(id_biletu, typ, cena, data, id_promocji) VALUES (3, 'Normalny', 20, TO_DATE(2023-02-30), null);
INSERT INTO BILETY(id_biletu, typ, cena, data, id_promocji) VALUES (4, 'Normalny', 20, TO_DATE(2023-02-30), null);
INSERT INTO BILETY(id_biletu, typ, cena, data, id_promocji) VALUES (5, 'VIP', 15, TO_DATE(2023-02-30), 2);

INSERT INTO KLIENCI(id_klienciu, imie, nazwisko, email, numer_telefonu, id_biletu) VALUES (1, 'Anna', 'Nowak', 'anna.nowak@gmail.com', '123456789', 1);
INSERT INTO KLIENCI(id_klienciu, imie, nazwisko, email, numer_telefonu, id_biletu) VALUES (2, 'Andrii', 'Nahornyi', 'andrii.nahornyi@gmail.com', '987654321', 2);
INSERT INTO KLIENCI(id_klienciu, imie, nazwisko, email, numer_telefonu, id_biletu) VALUES (3, 'Dima', 'Samkov', 'dima.samkov@gmail.com', '123987456', 3);
INSERT INTO KLIENCI(id_klienciu, imie, nazwisko, email, numer_telefonu, id_biletu) VALUES (4, 'Jakub', 'Fraj', 'jakub.fraj@gmail.com', '987123456', 4);
INSERT INTO KLIENCI(id_klienciu, imie, nazwisko, email, numer_telefonu, id_biletu) VALUES (5, 'Denys', 'Dmytruk', 'denys.dmytruk@gmail.com', '132465789', 5);

INSERT INTO REZERWACJE(id_rezerwacji, data_rezerwacji, status, id_seansu, id_klienciu, id_pracownicy) VALUES (1, SYSDATE, 'Oczekujące', 1, 1, 1);
INSERT INTO REZERWACJE(id_rezerwacji, data_rezerwacji, status, id_seansu, id_klienciu, id_pracownicy) VALUES (2, SYSDATE + 1 , 'Oczekujące', 2, 2, 2);
INSERT INTO REZERWACJE(id_rezerwacji, data_rezerwacji, status, id_seansu, id_klienciu, id_pracownicy) VALUES (3, SYSDATE - 1, 'Oczekujące', 1, 3, 1);

-- procedura N1 w pl/sql - zwiekszenie ceny biletu o 10%
CREATE OR REPLACE PROCEDURE increase_cene AS
    BEGIN
        UPDATE BILETY SET CENA  = CENA * 1.1;
    end;

call increase_cene();
Select * from BILETY;

--procedure N2 w pl/sql - dodaje nowego klienta
CREATE OR REPLACE PROCEDURE dodaj_klienta(p_id_klienciu INT, p_imie VARCHAR2, p_nazwisko VARCHAR2, p_email VARCHAR2, p_numer_telefonu INT, p_id_biletu INT) AS
    v_count INT;
    BEGIN
        SELECT COUNT(*) INTO v_count FROM KLIENCI WHERE id_klienciu = p_id_klienciu;
        IF v_count = 0 THEN
            INSERT INTO KLIENCI(id_klienciu, imie, nazwisko, email, numer_telefonu, id_biletu)
            VALUES (p_id_klienciu,p_imie, p_nazwisko, p_email, p_numer_telefonu, p_id_biletu);
        ELSE
            RAISE_APPLICATION_ERROR(-20001, 'id_klienciu already exists');
    END IF;
END;

   BEGIN
        dodaj_klienta(6, 'John', 'Doe', 'johndoe@example.com', 1234567890, 1);
   COMMIT;
END;

Select * from KLIENCI;

--trigger N1 w pl/sql - sprawdzenie rabatu
CREATE OR REPLACE TRIGGER sprawdzenie_rabatu
    BEFORE INSERT OR UPDATE
    ON PROMOCJE
    FOR EACH ROW
    BEGIN
        if :NEW.termin_waznosci < SYSDATE - 1 then
            :NEW.rabat := 0;
        end if;
    end;

INSERT INTO PROMOCJE (id_promocji, rabat, termin_waznosci)
            VALUES  (3, 0.1, SYSDATE + 1);

INSERT INTO PROMOCJE (id_promocji, rabat, termin_waznosci)
            VALUES  (4, 0.2, SYSDATE + 1);

SELECT * FROM PROMOCJE;

--trigger N2 w pl/sql - cena biletu po rabatu
CREATE OR REPLACE TRIGGER cena_bileta_po_rabatu
    AFTER UPDATE OF rabat On PROMOCJE
    FOR EACH ROW
    BEGIN
        update BILETY SET cena = cena * (1 - :NEW.rabat) WHERE id_promocji = :new.id_promocji;
    end cena_bileta_po_rabatu;

UPDATE PROMOCJE
SET rabat = 0.2
WHERE id_promocji = id_promocji;
select * from PROMOCJE;

SELECT cena
FROM BILETY
WHERE id_promocji = ID_PROMOCJI;

select * from BILETY;